var Number set_temp_high
var Number set_temp_low
var Number get_temp_now

rule "Turn on Heat"
when
   Item QQ010_G0_bedroom_temp1_get changed or Item QQ010_G0_bedroom_temp1_set changed  
then
   val String currentTime = String::format( "%1$tl:%1$tM%1$tp on %1$tB %1$te, %1$tY", new java.util.Date )
   logInfo("Temp control","Last update: " + QQ010_G0_bedroom_temp1_get.lastUpdate()) 
   update_QQ010_G0_bedroom_temp1.postUpdate(currentTime)
   get_temp_now = (QQ010_G0_bedroom_temp1_get.state as Number)
   set_temp_low = (QQ010_G0_bedroom_temp1_set.state as Number) - (QQ010_temp_hysteresis.state as Number)
   set_temp_high = (QQ010_G0_bedroom_temp1_set.state as Number) + (QQ010_temp_hysteresis.state as Number)
   if (get_temp_now <= set_temp_low) {
      QQ010_G0_bedroom_switch1_set.sendCommand(ON)
      logInfo("Temp control","Set low temperature is: " + set_temp_low + " while current temperature is: " + get_temp_now + " -> turning heat ON at: " + currentTime)
   }
   if (get_temp_now >= set_temp_high) {
      QQ010_G0_bedroom_switch1_set.sendCommand(OFF)
      logInfo("Temp control","Set high temperature is: " + set_temp_high + " while current temperature is: " + get_temp_now + " -> turning heat OFF at: "+ currentTime) 
   }
end
